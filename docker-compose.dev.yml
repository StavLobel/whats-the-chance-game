services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: whats-the-chance-backend-dev
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
      - /app/__pycache__
    environment:
      - ENV=development
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-service-account.json
      - REDIS_URL=redis://redis:6379
      - REDIS_DB=0
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: whats-the-chance-frontend-dev
    ports:
      - '8080:8080'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache for Development
  redis:
    image: redis:7-alpine
    container_name: whats-the-chance-redis-dev
    ports:
      - '6379:6379'
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --requirepass ""
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  redis_data_dev:
    driver: local

networks:
  app-network:
    driver: bridge
