# Project Structure Guidelines

## Directory Organization

### Frontend Structure
```
src/
├── components/          # Reusable React components
│   └── ui/             # shadcn/ui base components
├── hooks/              # Custom React hooks
├── pages/              # Route pages (Home, Create, View)
├── lib/                # Utilities and Firebase logic
├── types/              # TypeScript type definitions
├── data/               # Mock data for development
└── tests/              # Unit + E2E tests
```

### Backend Structure
```
backend/
├── app/                # FastAPI application modules
├── tests/              # Pytest + Playwright tests
├── reports/            # Allure test result files
├── Dockerfile          # Production container config
├── entrypoint.sh       # Deployment entry script
└── main.py             # Application entrypoint
```

## File Naming Conventions
- Use kebab-case for file and directory names
- Use PascalCase for React component files
- Use camelCase for utility functions and hooks
- Use UPPERCASE for environment variables and constants

## Import Organization
1. External library imports
2. Internal component imports
3. Type imports
4. Relative imports

## Code Organization Principles
- Keep files under 300 lines when possible
- Separate concerns into focused modules
- Use index files for clean imports
- Group related functionality together
- Maintain consistent folder structure across features

## Documentation Requirements
- Update README.md for major changes
- Document API endpoints in FastAPI
- Add JSDoc comments for complex functions
- Maintain up-to-date SRD.md file
description:
globs:
alwaysApply: false
---
