---
description: GitHub issue tracking and task completion guidelines
globs:
  - "**/*.{ts,tsx,js,jsx,py}"
  - "**/*.md"
alwaysApply: true
---

# GitHub Issue Tracking Guidelines

## Task Completion Workflow

### When Completing a Task:
1. **Update the corresponding GitHub issue** with:
   - Status change to "completed" or "closed"
   - Brief summary of what was implemented
   - Any important technical decisions made
   - Links to relevant code changes or documentation

2. **Update TASKS.md** to reflect completion:
   - Mark task as completed with completion date
   - Add brief implementation notes
   - Update progress percentages

3. **Commit Message Format**:
   ```
   âœ… Complete [Task Name] - Closes #[issue-number]
   
   - Brief description of what was implemented
   - Any important technical notes
   - Testing coverage achieved
   ```

### Issue Update Requirements:
- **Always close issues** when the corresponding task is fully implemented
- **Add implementation details** to help with future maintenance
- **Link to relevant documentation** (SRD.md, README.md updates)
- **Mention test coverage** achieved for the feature
- **Tag team members** if collaboration was involved

### Documentation Updates:
- Update README.md if new features affect user experience
- Update SRD.md if technical specifications changed
- Update API documentation if backend endpoints were modified
- Update component documentation if new UI components were added

### Quality Checklist:
- [ ] All tests pass (unit, integration, E2E)
- [ ] Code follows project standards
- [ ] Documentation is updated
- [ ] GitHub issue is closed with proper summary
- [ ] TASKS.md is updated
- [ ] No breaking changes introduced

## Issue Management Best Practices:
- Use descriptive issue titles
- Include acceptance criteria in issue descriptions
- Link issues to related tasks in TASKS.md
- Use appropriate labels (bug, feature, enhancement, etc.)
- Assign issues to team members when appropriate
- Set milestones for project phases

## Automation Notes:
- Consider using GitHub Actions to auto-close issues on merge
- Use conventional commits to trigger automatic issue linking
- Set up branch protection rules for main branch
- Configure automated testing on pull requests
