# Frontend Component Guidelines

## React Component Standards
- Use TypeScript for all components
- Follow functional component pattern with hooks
- Use proper TypeScript interfaces for props
- Export components as named exports

## Styling Guidelines
- Use Tailwind CSS for all styling
- Follow mobile-first responsive design
- Use shadcn/ui components as base building blocks
- Implement smooth animations with Framer Motion or CSS transitions

## Component Structure
```typescript
interface ComponentProps {
  // Define all props with proper types
}

export const ComponentName: React.FC<ComponentProps> = ({ 
  prop1, 
  prop2 
}) => {
  // Component logic here
  
  return (
    <div className="mobile-first-classes md:desktop-classes">
      {/* JSX content */}
    </div>
  );
};
```

## UI/UX Requirements
- Implement classic menu drawer navigation
- Add notification badge counts
- Support light/dark mode theming
- Ensure full responsiveness across all devices
- Use Lucide React icons consistently

## State Management
- Use React hooks for local state
- Implement proper error boundaries
- Handle loading states gracefully
- Use React Query for server state management

## Firebase Integration
- Use Firebase hooks for authentication
- Implement real-time listeners for Firestore
- Handle offline states appropriately
description:
globs:
alwaysApply: false
---
